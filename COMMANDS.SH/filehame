#! /bin/sh

# designed by Nobuaki Tounaka
# written by 321516

# print the usage and exit
print_usage_and_exit () {
  cat <<-__USAGE 1>&2
	Usage   : ${0##*/} -l<string> <template> <data>
	Version : Tue Jun 16 21:47:10 JST 2015
	        : Open usp Tukubai (POSIX.1 Bourne Shell/POSIX.1 commands)
__USAGE
  exit 1
}

# initialize
set -u
umask 0022
PATH='/usr/bin:/bin'
IFS=$(printf ' \t\n_'); IFS=${IFS%_}
export IFS LANG=C LC_ALL=C PATH
lopt=''
tmplfile=''
file=''
use_stdin=0

# parse arguments
if [ $# -lt 2 ]; then
  print_usage_and_exit
fi
if [ "_$1" = '_-l' ]; then
  shift
  lopt=$1
elif [ \( -n "$1" \) -a \( "_${1#-l}" != "_$1" \) ]; then
  lopt=${1#-l}
else
  print_usage_and_exit
fi
shift
if [ \( $# -ne 1 \) -a \( $# -ne 2 \) ]; then
  print_usage_and_exit
fi
if [ \( "_$1" = '_-'               \) -o \
     \( "_$1" = '_/dev/stdin'      \) -o \
     \( "_$1" = '_/dev/fd/0'       \) -o \
     \( "_$1" = '_/proc/self/fd/0' \)    ]
then
  tmplfile='-'
  use_stdin=$((use_stdin+1))
elif [ \( -f "$1" \) -o \( -c "$1" \) -o \( -p "$1" \) ]; then
  tmplfile=$1
else
  printf '%s: Invalid template file\n' "${0##*/}" 2>&1
  exit 1
fi
if [ $# -eq 1 ]; then
  file='-'
  use_stdin=$((use_stdin+1))
else
  if [ \( "_$2" = '_-'               \) -o \
       \( "_$2" = '_/dev/stdin'      \) -o \
       \( "_$2" = '_/dev/fd/0'       \) -o \
       \( "_$2" = '_/proc/self/fd/0' \)    ]
  then
    file='-'
    use_stdin=$((use_stdin+1))
  elif [ \( -f "$2" \) -o \( -c "$2" \) -o \( -p "$2" \) ]; then
    file=$2
  else
  printf '%s: Invalid data file\n' "${0##*/}" 2>&1
  exit 1
  fi
fi
if [ $use_stdin -gt 1 ]; then
  printf '%s: Both template file and data file request stdin\n' "${0##*/}" 2>&1
  exit 1
fi
if [ \( ! -r "$tmplfile" \) -a \( "_$tmplfile" != '_-' \) ]; then
  printf '%s: Cannot open the file as the template file\n' "${0##*/}" 1>&2
  exit 1
fi
if [ \( ! -r "$file" \) -a \( "_$file" != '_-' \) ]; then
  printf '%s: Cannot open the file as the data file\n' "${0##*/}" 1>&2
  exit 1
fi

# filehame
# (awk should not be run with "exec" because of having to remove tempfiles)
v1=$lopt v2=$tmplfile v3=$file awk '
BEGIN {
  lopt     = ENVIRON["v1"];
  tmplfile = ENVIRON["v2"];
  file     = ENVIRON["v3"];

  while (getline tmplline < tmplfile) {
    if (index(tmplline, lopt)) {
      system("cat \"" file "\"");
    } else {
      print tmplline;
    }
  }
}
'