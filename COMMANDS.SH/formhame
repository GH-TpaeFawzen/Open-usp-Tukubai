awk '
  BEGIN{
    ORS = ""; OFS = "";

    split("", st); # 各階層における状態
    stn = 0;       # 今見ている階層番号
    # tg_und : タグ括弧内（タグの状態が未確定）
    # in_com : コメント区間
    # sq_*   : 一重引用符内(*=thr:そのまま出力,get:文字列を取得,gth:両方)
    # dq_*   : 二重引用符内(*=thr:そのまま出力,get:文字列を取得,gth:両方)
    # tg_INP : inputタグ内
    # tg_SEL : selectタグ内
    # in_SEL : selectタグ区間
    # tg_OPT : optionタグ内
    # in_OPT : optionタグ内部区間
    # tg_TXT : textareaタグ内
    # in_TXT : textareaタグ内部区間
    # tg_SCR : scriptタグ内
    # in_SCR : scriptタグ区間
    # tg_oth : その他タグ内
    # in_oth : その他タグ内部区間

    attr="";    # 処理対象のタグ属性("typ","nam","val","chk","oth")
    str_inp=""; # input,buttonタグ文字列（"<input"の次から">"まで）
    str_typ=""; # type属性の文字列
    str_nam=""; # name属性の文字列
    str_val=""; # value属性の文字列
    str_chk=""; # check属性の文字列（属性名ごと格納する）
    pos_val=""; # str_inp文字列中でのvalue属性の開始位置
    pos_chk=""; # str_inp文字列中でのcheck属性名の開始位置

    qstr=""; # 

    
    lbuf = "";
    '$stdin_case'while (! getline line              ) {
    '$file__case'while (! getline line < "'"$file"'") {
      if (line == "") {print "\n"; next;}
      while (line != "") {
        if (stn<0) {stn=0;}
        s = st[stn];
        if      (stn == 0     ) {in_oth();    }
        else if (s == "in_oth") {in_oth();    }
        else if (s == "tg_und") {tg_und();    }
        else if (s == "tg_oth") {tg_oth();    }
        else if (s == "in_com") {in_com();    }
        else if (s == "sq_thr") {sq_thru();   }
        else if (s == "sq_get") {sq_get();    }
        else if (s == "sq_gth") {sq_getthru();}
        else if (s == "dq_thr") {dq_thru();   }
        else if (s == "dq_get") {dq_get();    }
        else if (s == "dq_gth") {dq_getthru();}
        else if (s == "tg_SCR") {tg_SCR();    }
        else if (s == "in_SCR") {in_SCR();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        else if (s == "      ") {______();    }
        } else               {
        }
      }
      print "\n";
    }


  }

  function in_oth( p) {
    p = index(line, "<");
    if (p) {
      stn++;st[stn]="tg_und"; print substr(line,1,p); line=substr(line,p+1);
    } else {
      print line; line="";
    }
  }
  function tg_oth( s) {
    match(line,/^[\"\047>]|\/>/);
    if (! RSTART) {print line; line=""; return;}
    s=substr(line,RSTART,RLENGTH);
    print substr(line,1,RSTART+RLENGTH-1);
    line=substr(line,RSTART+RLENGTH);
    if      (s == ">"   ) {stn++; st[stn]="in_oth";}
    else if (s == "\""  ) {stn++; st[stn]="dq_thr";}
    else if (s == "\047") {stn++; st[stn]="sq_thr";}
    else                  {stn--;                  }
  }

  function tg_und( s) {
    if (substr(line,1,3) == "!--") {
      st[stn]="in_com"; print substr(line,4); line=substr(line,5); return;
    }
    if (! match(line,/^[A-Za-z0-9]+/)) {exit 1;}
    s=substr(line,RLENGTH);
    print s;
    line=substr(line,RLENGTH+1);
    s=tolower(s);
    if      (s == "input"   ) {st[stn]="tg_INP";                  }
    else if (s == "option"  ) {st[stn]="tg_OPT";                  }
    else if (s == "select"  ) {st[stn]="tg_SEL";                  }
    else if (s == "textarea") {st[stn]="tg_TXT";                  }
    else if (s == "script"  ) {st[stn]="tg_SCR";                  }
    else if (s == "button"  ) {st[stn]="tg_INP";                  }
    else if (s == "datalist") {st[stn]="tg_SEL";                  }
    else                      {st[stn]="tg_oth";                  }
  }

  function in_com( p) {
    p=index(line,"-->");
    if (p) {stn--; print substr(line,1,p); line=substr(line,p+1);}
    else   {print line; line="";                                 }
  }

  function sq_thru( p) {
    p = index(line, "\047");
    if (p) {stn--; print substr(line,1,p); line=substr(line,p+1);}
    else   {print line; line="";                                 }
  }
  function sq_get( p) {
    p = index(line, "\047");
    qstr = (length(qstr)) ? qstr "\n" substr(line,1,p) : substr(line,1,p);
    if (p) {stn--; line=substr(line,p+1);}
    else   {       line="";              }
  }
  function sq_getthru( p) {
    p = index(line, "\047");
    qstr = (length(qstr)) ? qstr "\n" substr(line,1,p) : substr(line,1,p);
    if (p) {stn--; print substr(line,1,p); line=substr(line,p+1);}
    else   {print line; line="";                                 }
  }

  function dq_thru( p) {
    p = index(line, "\"");
    if (p) {stn--; print substr(line,1,p); line=substr(line,p+1);}
    else   {print line; line="";                                 }
  }
  function dq_get( p) {
    p = index(line, "\"");
    qstr = (length(qstr)) ? qstr "\n" substr(line,1,p) : substr(line,1,p);
    if (p) {stn--; line=substr(line,p+1);}
    else   {       line="";              }
  }
  function dq_getthru( p) {
    p = index(line, "\"");
    qstr = (length(qstr)) ? qstr "\n" substr(line,1,p) : substr(line,1,p);
    if (p) {stn--; print substr(line,1,p); line=substr(line,p+1);}
    else   {print line; line="";                                 }
  }

  function tg_SCR( s) {
    match(line,/^[\"\047>]|\/>/);
    if (! RSTART) {print line; line=""; return;}
    s=substr(line,RSTART,RLENGTH);
    print substr(line,1,RSTART+RLENGTH-1);
    line=substr(line,RSTART+RLENGTH);
    if      (s == ">"   ) {stn++; st[stn]="in_SCR";}
    else if (s == "\""  ) {stn++; st[stn]="dq_thr";}
    else if (s == "\047") {stn++; st[stn]="sq_thr";}
    else                  {stn--;                  }
  }
  function in_SCR( s) {
    match(line,/<!--|["\047]|<\/script>|<\/SCRIPT>/);
    if (! RSTART) {print line; line=""; return;}
    s=substr(line,RSTART,RLENGTH);
    print substr(line,1,RSTART+RLENGTH-1);
    line=substr(line,RSTART+RLENGTH);
    if      (s == "<!--") {stn++; st[stn]="in_com";}
    else if (s == "\""  ) {stn++; st[stn]="dq_thr";}
    else if (s == "\047") {stn++; st[stn]="sq_thr";}
    else                  {stn--;                  }
  }

  function tg_INP( l,s,S) {
    if      (attr=="typ") {attr=""; str_typ=tolower(qstr);str_chk=str_chk qstr;}
    else if (attr=="nam") {attr=""; str_nam=qstr;         str_chk=str_chk qstr;}
    else if (attr=="val") {attr=""; str_val=qstr;                              }
    else if (attr=="chk") {attr="";
                           s=substr(str_chk,length(str_chk)); s=(s=="=")?"":s;
                           str_chk=str_chk qstr s;                             }
    else if (attr=="oth") {attr="";
                           str_inp=(str_inp!="") ? str_inp "\n" line : line;   }
    l=tolower(line);
    match(l,
    /["\047>]|type=["\047]?|name=["\047]?|value=["\047]?|checked(=["\047]?)?/);
    if (! RSTART) {is=(is!="")?is line "\n":line "\n"; return;}
    S=substr(line,1,RSTART+RLENGTH-1); str_inp=(str_inp!="") ? str_inp S : S;
    s=substr(l,RSTART,RLENGTH);
    if        (s=="\""         ) {
      attr="oth"; stn++; st[stn]="dq_thr";
    } else if (s=="\047"       ) {
      attr="oth"; stn++; st[stn]="sq_thr";
    } else if (s=="type="      ) {
      match(l,/type=[^\t ]*/   );
      str_typ=substr(line,RSTART+5,RLENGTH-5); str_inp=str_inp str_typ;
      str_typ=tolower(str_typ);
    } else if (s=="type=\""    ) {
      attr="typ"; stn++; st[stn]="dq_get";
    } else if (s=="type=\047"  ) {
      attr="typ"; stn++; st[stn]="sq_get";
    } else if (s=="name="      ) {
      match(l,/name=[^\t ]*/   );
      str_nam=substr(line,RSTART+5,RLENGTH-5); str_inp=str_inp str_nam;
    } else if (s=="name=\""    ) {
      attr="nam"; stn++; st[stn]="dq_get";
    } else if (s=="name=\047"  ) {
      attr="nam"; stn++; st[stn]="sq_get";
    } else if (s=="value="     ) {
      match(l,/value=[^\t ]*/  );
      str_val=substr(line,RSTART+6,RLENGTH-6); pos_val=length(str_inp)+1;
    } else if (s=="value=\""   ) {
      attr="val"; stn++; st[stn]="dq_get";     pos_val=length(str_inp)+1;
    } else if (s=="value=\047" ) {
      attr="val"; stn++; st[stn]="sq_get";     pos_val=length(str_inp)+1;
    } else if (s=="checked"    ) {
      str_chk=S;                               pos_chk=length(str_inp)+1;
    } else if (s=="checked="   ) {
      match(l,/checked=[^\t ]*/);
      str_val=substr(line,RSTART+8,RLENGTH-8);
      str_chk=S str_val;                       pos_chk=length(str_inp)+1;
    } else if (s=="checked=\"" ) {
      str_chk=S;                               pos_val=length(str_inp)+1;
      attr="chk"; stn++; st[stn]="dq_get";
    } else if (s=="value=\047" ) {
      str_chk=S;                               pos_val=length(str_inp)+1;
      attr="chk"; stn++; st[stn]="sq_get";
    } else                       { # This means the variable "s" == ">"
      # (ToDo)出力
      # typeの対応種類 radio,checkbox,file,その他
      if        (str_typ=="file"                      ) {
        # 何も加工せず、元の<input>タグ文字列をそのまま出力
      } else if (str_typ=="radio"||str_typ=="checkbox") {
        # nameとvalueはそのまま出力、
        # checkedはnameとvalueが一致すればつける、しなければつけない
      } else                                            {
        # nameが一致すればvalueを差し替えて出力
      }


      str_inp=""; # inputタグ文字列（"<input"の次から">"まで）
      str_typ=""; # type属性の文字列
      str_nam=""; # name属性の文字列
      str_val=""; # value属性の文字列
      str_chk=""; # check属性の文字列（属性名ごと格納する）
      pos_val=""; # str_inp文字列中でのvalue属性の開始位置
      pos_chk=""; # str_inp文字列中でのcheck属性名の開始位置
      stn--;
    }
  }










'