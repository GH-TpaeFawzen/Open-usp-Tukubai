#!/bin/sh

######################################################################
#
# GYO - Count the Number of Lines the Specified File Has
#
# Usage  : gyo [-f] <file> ...
#
#          <file> ..... File to count
#
# Options: -f ......... Insert the filename before the number
#
# Designed originally by Nobuaki Tounaka
# Written by Shell-Shoccar Japan (@shellshoccarjpn) on 2020-06-23
#
# This is a public-domain software (CC0). It means that all of the
# people can use this for any purposes with no restrictions at all.
# By the way, we are fed up with the side effects which are brought
# about by the major licenses.
#
######################################################################


######################################################################
# Initial Configuration
######################################################################

# === Initialize shell environment ===================================
set -u
umask 0022
export LC_ALL=C
export PATH="$(command -p getconf PATH 2>/dev/null)${PATH+:}${PATH-}"
case $PATH in :*) PATH=${PATH#?};; esac
export UNIX_STD=2003  # to make HP-UX conform to POSIX

# === Define the functions for printing usage and error message ======
print_usage_and_exit () {
  cat <<-USAGE 1>&2
	Usage   : gyo [-f] <file> ...
	          <file> ..... File to count
	Options : -f ......... Insert the filename before the number
	Version : 2020-06-23 00:26:21 JST
	          Open usp Tukubai (POSIX Bourne Shell/POSIX commands)
	USAGE
  exit 1
}
error_exit() {
  ${2+:} false && echo "${0##*/}: $2" 1>&2
  exit $1
}


######################################################################
# Parse Arguments
######################################################################

# === Get the options and the filepaths ==============================
# --- initialize option parameters -----------------------------------
fopt=0
#
# --- get them -------------------------------------------------------
case $# in [!0]*)
  case "$1" in '-f') fopt=1; shift;; esac
  ;;
esac
#
# --- Regard that the data is from stdin if no file argument ---------
case $# in 0) set -- -;; esac


######################################################################
# Main
######################################################################

# === set local parameters ===========================================
use_stdin=0

# === count lines ====================================================
for file in "$@"; do
  dispfile=$file
  # --- Make sure that it is a readable file -------------------------
  if [ ! -f "$file" ] && [ ! -c "$file"     ] &&
     [ ! -p "$file" ] && [ "_$file" != '_-' ]   ; then
    error_exit 1 "$file: Invalid file"
  fi
  #
  # --- Filepath protection  -----------------------------------------
  case "$file" in ''|-|/*|./*|../*) :;; *) file="./$file";; esac
  #
  # --- Count --------------------------------------------------------
  grep ^ "$file"                               |
  wc -l                                        |
  case $fopt in                                #
    0)                           tr -d ' \t';; #
    *) printf '%s ' "$dispfile"; tr -d ' \t';; #
  esac
done
