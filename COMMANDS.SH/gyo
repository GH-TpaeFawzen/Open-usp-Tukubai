#! /bin/sh

# designed by Nobuaki Tounaka
# written by 321516

# print the usage and exit
print_usage_and_exit () {
  cat <<-__USAGE 1>&2
	Usage   : ${0##*/} [-f] <file> ...
	Version : Wed Sep 23 17:31:05 JST 2015
	        : Open usp Tukubai (POSIX.1 Bourne Shell/POSIX.1 commands)
__USAGE
  exit 1
}


# initialize
set -u
umask 0022
PATH='/usr/bin:/bin'
IFS=$(printf ' \t\n_'); IFS=${IFS%_}
export IFS LANG=C LC_ALL=C PATH
fopt=0
use_stdin=0


# parse argument
case $# in [!0]*)
  case "$1" in '-f') fopt=1; shift;; esac
  ;;
esac

# FUNC: counting
counting() {
  if [ \( "_$1" = '_-'               \) -o \
       \( "_$1" = '_/dev/stdin'      \) -o \
       \( "_$1" = '_/dev/fd/0'       \) -o \
       \( "_$1" = '_/proc/self/fd/0' \)    ]
  then
    case $use_stdin in
      [!0]*) printf '%s: stdin can be used only once in the arguments\n' \
                    "${0##*/}" 1>&2
             exit 1
             ;;
    esac
    use_stdin=$((use_stdin+1))
    file=$1
  elif [ \( -f "$1" \) -o \( -c "$1" \) -o \( -p "$1" \) ]; then
    file=$1
    if [ \( ! -r "$file" \) -a \( "_$file" != '_-' \) ]; then
      printf '%s: Cannot open the file "%s"\n' "${0##*/}" "$1" 1>&2
      exit 1
    fi
  else
    print_usage_and_exit
  fi
  case "$file" in ''|-|/*|./*|../*) :;; *) file="./$file";; esac

  (cat "$file"; echo '') |
  sed '${/^$/d;}'        |
  wc -l                  |
  case $fopt in
    0)                       tr -d ' \t';;
    *) printf '%s ' "$file"; tr -d ' \t';;
  esac
}


# count lines
case $# in
  0)                     counting '-'         ;;
  *) for arg in "$@"; do counting "$arg"; done;;
esac
