#! /bin/sh

# designed by Nobuaki Tounaka
# written by 321516

# print the usage and exit
print_usage_and_exit () {
  cat <<-__USAGE 1>&2
		Usage   : ${0##*/} [-<n>] [-d[<string>]] [num=<n>] <file>
		Version : Mon Jun 22 01:40:20 JST 2015
		        : Open usp Tukubai (POSIX.1 Bourne Shell/POSIX.1 commands)
__USAGE
  exit 1
}

# Initialize
set -u
umask 0022
PATH='/usr/bin:/bin'
IFS=$(printf ' \t\n_'); IFS=${IFS%_}
export IFS LANG=C LC_ALL=C PATH

# parse the arguments
n=-1
dopt=' '
numopt=0
file=''
n_is_set=0
dopt_is_set=0
numopt_is_set=0
i=0
for arg in "$@"; do
  i=$((i+1))
  case $arg in
    -[0-9]*)
      printf '%s\n' "${arg#-}" | grep -q '^[0-9]\{1,\}$'
      [ $? -eq 0 ] || print_usage_and_exit
      if [ $n_is_set -eq 0 ]; then
        n=${arg#-}
        n_is_set=1
        continue
      fi
      ;;
    num=[0-9]*)
      printf '%s\n' "${arg#num=}" | grep -q '^[0-9]\{1,\}$'
      [ $? -eq 0 ] || print_usage_and_exit
      if [ $numopt_is_set -eq 0 ]; then
        numopt=${arg#num=}
        numopt_is_set=1
        continue
      fi
      ;;
    -d*)
      if [ $dopt_is_set -eq 0 ]; then
        dopt=${arg#-d}
        dopt_is_set=1
        continue
      fi
      ;;
    -h|--help|--version)
      print_usage_and_exit
      ;;
  esac
  [ $i -eq $# ] || print_usage_and_exit
  file=$arg
done
[ -n "$file" ] || file='-'

# validate the file arguments
[ $n -ne 0 ] || print_usage_and_exit
if [ \( ! -r "$file" \) -a \( "_$file" != '_-' \) ]; then
  printf '%s: Cannot open the file\n' "${0##*/}" 1>&2
  exit 1
fi
case "$file" in ''|-|/*|./*|../*) :;; *) file="./$file";; esac

# main
export v1=$n
export v2=$numopt
export v3="$dopt"
exec awk '
BEGIN {
  n    = ENVIRON["v1"];
  num  = ENVIRON["v2"];
  d    = ENVIRON["v3"];
  ORS  = "";
  idx0 = " ";
  idx  = "";
  dlmr = "";
}
{
  # ===== make the index string ====================================
  #
  if (num > 0) {
    idx = "";
    for (i=1; i<=num; i++) {
      idx = idx $i OFS;
    }
  }
  if (idx != idx0) {
    cnt  = n;
    idx0 = idx;
  }

  # ===== YARRing ==================================================
  #
  for (i=1+num; i<=NF; i++) {
    if (cnt == n) {
      print dlmr idx;
      dlm  = "";
    }
    dlmr = "\n";
    print dlm $i;
    dlm = d;
    cnt--;
    if (cnt == 0) {
      cnt = n;
    }
  }
}
END {
  print dlmr;
}

' "$file"
